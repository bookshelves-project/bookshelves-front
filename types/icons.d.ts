/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-svg-transformer
export {};

declare global {
  export type SvgName = 'arrow-narrow-right' | 'check' | 'chevron-right' | 'cog' | 'cross-sm' | 'download' | 'dropdown' | 'external-link' | 'eye' | 'feature-api' | 'feature-catalog' | 'feature-download' | 'feature-epub' | 'feature-ereader' | 'feature-feed' | 'feature-languages' | 'feature-metadata' | 'heart' | 'highlight-books' | 'highlight-features' | 'highlight-guides' | 'home' | 'login' | 'logo' | 'logout' | 'magnifying-glass' | 'navigation-author' | 'navigation-book' | 'navigation-serie' | 'navigation-tag' | 'question-mark-circle' | 'register' | 'review' | 'solid-chevron' | 'star-full' | 'star-half' | 'star' | 'test' | 'toast-default' | 'toast-error' | 'toast-information' | 'toast-success' | 'toast-warning' | 'trash' | 'user-circle' | 'default'
  interface Window {
    ust: {
      options: { cacheDir?: string, global: boolean, libraryDir?: string, svgDir?: string, useTypes: boolean, isTesting: boolean, isNuxt: boolean, nuxtDir: string, fallback: string, svg: { classDefault?: string[], clearSize: 'all' | 'parent' | 'none', clearClass: 'all' | 'parent' | 'none', clearStyle: 'all' | 'parent' | 'none', currentColor: boolean, inlineStyleDefault?: string[], sizeInherit: boolean, title?: boolean }, warning: boolean }
      svgList: Record<SvgName, () => Promise<{ default: string }>>
      importSvg: (name: SvgName) => Promise<string>
    }
  }
}

declare module 'vue' {
  export interface GlobalComponents {
    SvgIcon: typeof import('unplugin-svg-transformer/dist/vue')['SvgIcon']
  }
}
